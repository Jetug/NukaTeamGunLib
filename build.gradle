plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = "${minecraft_version}-${mod_version}"
group = 'com.nukateam.ntgl'
archivesBaseName = 'ntgl'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    add sourceSets.main, "ntgl.mixin-refmap.json"
    config 'ntgl.mixin.json'
}

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'ntgl'
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=ntgl.mixin.json"

            mods {
                ntgl {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'ntgl'
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=ntgl.mixin.json"

            mods {
                ntgl {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'ntgl'
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=ntgl.mixin.json"

            mods {
                ntgl {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'ntgl', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            arg "-mixin.config=ntgl.mixin.json"

            mods {
                ntgl {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenLocal()
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven { url 'https://libs.azuredoom.com:4443/mods' }
    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.2.0'
    implementation fg.deobf("mod.azure.azurelib:azurelib-neo-1.20.1:2.0.20")
    implementation fg.deobf('curse.maven:framework-549225:4718251')
    implementation fg.deobf('curse.maven:backpacked-352835:5401968')
    compileOnly fg.deobf('curse.maven:controllable-317269:4598985')
    implementation fg.deobf("dev.kosmx.player-anim:player-animation-lib-forge:1.0.2-rc1+1.20")

    compileOnly fg.deobf("mezz.jei:jei-1.20.1-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-1.20.1-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-1.20.1-forge:${jei_version}")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    testAnnotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "NukaTeam Gun Lib",
                "Specification-Vendor"    : "NukaTeam",
                "Specification-Version"   : "1",
                "Implementation-Title"    : "NukaTeam Gun Lib",
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "NukaTeam",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass"              : "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder"              : 0,
                "MixinConfigs"            : "ntgl.mixin.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
